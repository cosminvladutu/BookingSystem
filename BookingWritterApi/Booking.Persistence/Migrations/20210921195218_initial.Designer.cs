// <auto-generated />
using System;
using Booking.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Booking.Persistence.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    [Migration("20210921195218_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Booking.Persistence.Entities.Booking", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.HasIndex("RoomId");

                    b.HasIndex("UserId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Booking.Persistence.Entities.Hotel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hotel");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8457c0d-18d4-420b-ad23-e032dbe146ce"),
                            Address = "testAddress",
                            Description = "testDescription",
                            Email = "test@testing.com",
                            Name = "testHotelName",
                            PhoneNo = "074123456789"
                        },
                        new
                        {
                            Id = new Guid("7ba931e3-9f95-489f-8ae4-ed1fda8e0365"),
                            Address = "testAddressHotel2",
                            Description = "testDescriptionHotel2",
                            Email = "test2@testing.com",
                            Name = "testHotelName2",
                            PhoneNo = "074123456123"
                        });
                });

            modelBuilder.Entity("Booking.Persistence.Entities.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("HotelId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("HotelId");

                    b.ToTable("Room");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c3988c86-d83b-47ae-bd72-d503e7eafd0b"),
                            Description = "testRoomDescr",
                            HotelId = new Guid("e8457c0d-18d4-420b-ad23-e032dbe146ce")
                        },
                        new
                        {
                            Id = new Guid("0087a0b6-a808-4a02-b038-5b96fcc1f6bf"),
                            Description = "testRoomDescr",
                            HotelId = new Guid("7ba931e3-9f95-489f-8ae4-ed1fda8e0365")
                        },
                        new
                        {
                            Id = new Guid("d274196d-96f9-437e-98ea-0f312b9dbd78"),
                            Description = "testRoomDescr",
                            HotelId = new Guid("7ba931e3-9f95-489f-8ae4-ed1fda8e0365")
                        });
                });

            modelBuilder.Entity("Booking.Persistence.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2900d866-69e8-41cb-a2d5-cdbf9e07f964"),
                            Email = "test@testing.com",
                            FirstName = "testFirstName",
                            LastName = "testLastName",
                            PhoneNo = "074123456789",
                            Username = "testUser"
                        },
                        new
                        {
                            Id = new Guid("749b75b6-e8d4-4718-a019-3833c980441b"),
                            Email = "test2@testing.com",
                            FirstName = "test2FirstName",
                            LastName = "test2LastName",
                            PhoneNo = "074123456712",
                            Username = "testUser2"
                        });
                });

            modelBuilder.Entity("Booking.Persistence.Entities.Booking", b =>
                {
                    b.HasOne("Booking.Persistence.Entities.Hotel", "Hotel")
                        .WithMany()
                        .HasForeignKey("HotelId");

                    b.HasOne("Booking.Persistence.Entities.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomId");

                    b.HasOne("Booking.Persistence.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Hotel");

                    b.Navigation("Room");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Booking.Persistence.Entities.Room", b =>
                {
                    b.HasOne("Booking.Persistence.Entities.Hotel", "Hotel")
                        .WithMany("RoomList")
                        .HasForeignKey("HotelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Booking.Persistence.Entities.Hotel", b =>
                {
                    b.Navigation("RoomList");
                });
#pragma warning restore 612, 618
        }
    }
}
